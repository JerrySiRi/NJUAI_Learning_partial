'''
一台服务器上存储了许多请求日志，每条日志信息都包含请求发送方的ip地址，包括IPv4和IPv6两种格式，但该日志文件受到了损坏，其中的ip地址信息可能不符合规范。
现在需要判断给定的ip地址是否符合规范，若是IPv4地址，则输出4；若是IPv6地址，则输出6；否则输出-1。（不符合规范，输出-1）

IPv4地址格式规范如下：
A.B.C.D
其中 0<= A,B,C,D <= 255， 为非负整数，且每段数字前不包含前导0（单独的0可以）。【00不合法，输出-1    0就合法，输出4】
例如： "127.0.0.1" 为合法地址；"127.00.0.1"不合法（包含前导0）。
127.0..0


IPv6地址格式规范如下：
A:B:C:D:E:F:G:H
其中 0<= A,B,C,D,E,F,G,H <= 0xffff， 为16进制字符串，【允许大小写字母混合、前导0】，字符【长度不超过4个字符且不小于1个字符。】
例如：
"3001:1df8:86c3:0000:00:9C2E:370:734" 为合法地址;
"03001:1df8:86c3:0000:00:9C2E:370:734" 不合法（A部分长度超过4个字符）。
"3001:1df8:86c3:0000::9C2E:370:734" 不合法（E部分长度小于1个字符）。

输入示例：
127.0.0.1
输出示例：
4

127.0f.0.1
3001:1df8:86c3:0000:0000:9C2E:370:734
首先依据形式( .和 ：)
是IPV4的形式（.）--->再依据规则判断合不合法
是IPV6的形式（：）--->再依据规则判断合不合法
两者都不是（既有.又有：。既没有.又没有：）【直接-1】

'''
iping=input()
def noone(ip):#判断是否两者都不是
    if ('.' in ip) and (':' in ip):
        return True
    if ('.' not in ip) and (':' not in ip):
        return True
    return False
'''
IPv4地址格式规范如下：
A.B.C.D
其中 0<= A,B,C,D <= 255， 为非负[整数]，且每段数字前不包含前导0（单独的0可以）。【00不合法，输出-1    0就合法，输出4】
例如： "127.0.0.1" 为合法地址；"127.00.0.1"不合法（包含前导0）。
'''
def judge(ip):
    if noone(ip):
        print(-1)
        return
    else:
        if '.' in ip:#是IPV4，考虑不满足情况的时候，最后满足情况的print（4）#IPV4的错误：输入的时候可以不是整数！
            target=ip.split('.')
            for i in target:
                if len(i)==0 :
                    print(-1)
                    return
                for k in i:
                    if not('0'<=k<='9'):#输入不是整数
                        print(-1)
                        return
                if (int(i)<0) or (int(i)>255) or (int(i)%1!=0):#五种不合法。在0之下，在255之上，不是整数，有前导0，空的
                    print(-1)
                    return
                if len(i)!=1 and (i[0]=='0'):#前导0
                    print(-1)
                    return
            print(4)
            return
        elif ':' in ip:#是IPV6，同样考虑不满足情况的时候，最后满足情况print(6)#IPV6的错误：16进制字母！！！
            target=ip.split(':')
            for i in target:#考虑不合法，大小写字母和数字 and 字符长度在1-4个之间
                if not(1<=len(i)<=4):
                    print(-1)
                    return
                for j in i:
                    if not('0'<=j<='9'or 'a'<=j<='f'or'A'<=j<='F'):
                        print(-1)
                        return
            print(6)
judge(iping)

'''
IPv6地址格式规范如下：
A:B:C:D:E:F:G:H
其中 0<= A,B,C,D,E,F,G,H <= 0xffff， 为16进制字符串，【允许大小写字母混合、前导0】，字符【长度不超过4个字符且不小于1个字符。】
例如：
"3001:1df8:86c3:0000:00:9C2E:370:734" 为合法地址;
"03001:1df8:86c3:0000:00:9C2E:370:734" 不合法（A部分长度超过4个字符）。
"3001:1df8:86c3:0000::9C2E:370:734" 不合法（E部分长度小于1个字符）。

'''








