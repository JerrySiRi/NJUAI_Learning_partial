'''
春节假期，从美国回来的Big Boss Mr Wu给他国内的x个员工发放红包
这个老板比较任性，他包了x*y个面值不同的红包，第i个红包的面值为i(1<=i<=x*y)，并随机分发给每个员工y个。
员工知道老板包红包和分发红包的规则，但只知道自己收到的y个红包的面值。
这些员工在激动之余，对这种发红包的方式感到新奇，他们决定凑在一起玩一个游戏来庆祝，游戏规则如下：

他们进行y次比拼,每次每人打出一张特定面值的红包,面值最大的员工就赢得了这次比拼。[一共会拼y次，每次都打出一个红包]
现在你作为这家公司的007号员工，也拿到了Big Boss Mr Wu发给你的y个红包，你知道自己的红包面值，但并不知道其他员工的红包面值。
请你编写程序，计算一下在这y次比拼中，你至少能赢几次？

备注：2<=x<=20,1<=y<=50

输入包括三行
第一行为x，表示公司的员工数量；
第二行为y，表示每个员工分到的红包数；
第三行为一个列表，列表中有y个正整数，表示开始时你（007号员工）收到的红包的面值。

输出一个数字，表示这y次比拼中你至少能赢多少次。（赢的次数最少）



样例输入：一共有10个红包，分给两个人，红包的面值是1-10中的整数。
2
5
[1,7,2,10,9]

样例输出：
2


样例输入：一共有66个红包，分给6个人，红包的面值是1-66中的整数。
6
11
[62,63,54,66,65,61,57,56,50,53,48]

样例输出：
4


2
1
[1]

2
5
[7,8,9,2,6]

2
5
[1,4,5,7,10]

'''
N_faculty=int(input())
N_bonus=int(input())
L_me=eval(input())
#博弈原则
#①拿最大的互相博弈，如果可以拼得过，就拼
#②如果拼不过，就拿最小的和他下
L_other=list(filter(lambda x:x not in L_me,[s for s in range(1,N_bonus*N_faculty+1)]))
print(L_other)
L_other.sort();L_me.sort()
count=0
for i in range(0,len(L_me)):#我的列表，从右往左是从大到小
    if L_me[-i-1]>max(L_other):
        count+=1
        L_other.remove(min(L_other))
    else:
        L_other.remove(max(L_other))
print(count)











